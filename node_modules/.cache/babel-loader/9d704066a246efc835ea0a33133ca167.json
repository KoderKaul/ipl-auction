{"ast":null,"code":"var _jsxFileName = \"/home/proxin/React/react-js-chat-webapp-example/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport { Typography, TextField, Container, IconButton } from \"@material-ui/core\";\nimport { Jumbotron, Spinner, Form, Button, FormGroup, Label, Input } from 'reactstrap';\nimport firebase from '../Firebase';\n\nfunction Login() {\n  const history = useHistory();\n  const [creds, setCreds] = useState({\n    nickname: ''\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const ref = firebase.database().ref('users/');\n\n  const login = e => {\n    e.preventDefault();\n    setShowLoading(true);\n    ref.orderByChild('nickname').equalTo(creds.nickname).once('value', snapshot => {\n      if (snapshot.exists()) {\n        localStorage.setItem('nickname', creds.nickname);\n        history.push('/roomlist');\n        setShowLoading(false);\n      } else {\n        const newUser = firebase.database().ref('users/').push();\n        newUser.set(creds);\n        localStorage.setItem('nickname', creds.nickname);\n        history.push('/roomlist');\n        setShowLoading(false);\n      }\n    });\n  };\n\n  const onChange = e => {\n    e.persist();\n    setCreds({ ...creds,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Join\"), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Name\",\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    value: user.nickName,\n    onChange: e => {\n      setUser({ ...user,\n        nickName: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.submitButton,\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowForwardIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/proxin/React/react-js-chat-webapp-example/src/components/Login.js"],"names":["React","useState","useHistory","ArrowForwardIcon","Typography","TextField","Container","IconButton","Jumbotron","Spinner","Form","Button","FormGroup","Label","Input","firebase","Login","history","creds","setCreds","nickname","showLoading","setShowLoading","ref","database","login","e","preventDefault","orderByChild","equalTo","once","snapshot","exists","localStorage","setItem","push","newUser","set","onChange","persist","target","name","value","classes","mainContainer","innerContainer","shrink","user","nickName","setUser","submitButton","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport { Typography, TextField, Container, IconButton } from \"@material-ui/core\";\nimport {\n    Jumbotron,\n    Spinner,\n    Form,\n    Button,\n    FormGroup, \n    Label, \n    Input\n} from 'reactstrap';\nimport firebase from '../Firebase';\n\nfunction Login() {\n    const history = useHistory();\n    const [creds, setCreds] = useState({ nickname: '' });\n    const [showLoading, setShowLoading] = useState(false);\n    const ref = firebase.database().ref('users/');\n\n    const login = (e) => {\n        e.preventDefault();\n        setShowLoading(true);\n        ref.orderByChild('nickname').equalTo(creds.nickname).once('value', snapshot => {\n            if (snapshot.exists()) {\n                localStorage.setItem('nickname', creds.nickname);\n                history.push('/roomlist');\n                setShowLoading(false);\n            } else {\n                const newUser = firebase.database().ref('users/').push();\n                newUser.set(creds);\n                localStorage.setItem('nickname', creds.nickname);\n                history.push('/roomlist');\n                setShowLoading(false);\n            }\n        });\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setCreds({...creds, [e.target.name]: e.target.value});\n    }\n\n    return (\n        <div className={classes.mainContainer}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.innerContainer}>\n          <Typography variant=\"h3\">Join</Typography>\n          <TextField\n            label=\"Name\"\n            variant=\"outlined\"\n            fullWidth\n            required={true}\n            InputLabelProps={{ shrink: true }}\n            value={user.nickName}\n            onChange={(e) => {\n                setUser({\n                ...user,\n                nickName: e.target.value,\n              });\n            }}\n          />\n\n          <IconButton\n            className={classes.submitButton}\n            color=\"primary\"\n            onClick={handleSubmit}\n          >\n            <ArrowForwardIcon fontSize = \"large\"/>\n          </IconButton>\n        </div>\n      </Container>\n    </div>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}