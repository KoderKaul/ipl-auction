{"ast":null,"code":"var _jsxFileName = \"/home/proxin/React/react-js-chat-webapp-example/src/components/MainScreen/ChatRoom/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Typography, TextField, IconButton, CircularProgress, Container, Paper, Grid } from \"@material-ui/core\";\nimport { Row, Col, Card, CardBody, CardSubtitle, Button, Form, InputGroup, Input, InputGroupAddon } from \"reactstrap\";\nimport Moment from \"moment\";\nimport firebase from \"../../../Firebase\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\nfunction ChatRoom() {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [nickname, setNickname] = useState(\"\");\n  const [roomname, setRoomname] = useState(\"\");\n  const [newchat, setNewchat] = useState({\n    roomname: \"\",\n    nickname: \"\",\n    message: \"\",\n    date: \"\",\n    type: \"\"\n  });\n  const history = useHistory();\n  const {\n    room\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem(\"nickName\"));\n      setRoomname(room);\n      firebase.database().ref(\"chats/\").orderByChild(\"roomname\").equalTo(roomname).on(\"value\", resp => {\n        setChats([]);\n        setChats(snapshotToArray(resp));\n      });\n    };\n\n    fetchData();\n  }, [room, roomname]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem(\"nickName\"));\n      setRoomname(room);\n      firebase.database().ref(\"roomusers/\").orderByChild(\"roomname\").equalTo(roomname).on(\"value\", resp2 => {\n        setUsers([]);\n        const roomusers = snapshotToArray(resp2);\n        setUsers(roomusers.filter(x => x.status === \"online\"));\n      });\n    };\n\n    fetchData();\n  }, [room, roomname]);\n\n  const snapshotToArray = snapshot => {\n    const returnArr = [];\n    snapshot.forEach(childSnapshot => {\n      const item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n    });\n    return returnArr;\n  };\n\n  const submitMessage = e => {\n    e.preventDefault();\n    const chat = newchat;\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format(\"DD/MM/YYYY HH:mm:ss\");\n    chat.type = \"message\";\n    const newMessage = firebase.database().ref(\"chats/\").push();\n    newMessage.set(chat);\n    setNewchat({\n      roomname: \"\",\n      nickname: \"\",\n      message: \"\",\n      date: \"\",\n      type: \"\"\n    });\n  };\n\n  const onChange = e => {\n    e.persist();\n    setNewchat({ ...newchat,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const exitChat = e => {\n    const chat = {\n      roomname: \"\",\n      nickname: \"\",\n      message: \"\",\n      date: \"\",\n      type: \"\"\n    };\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format(\"DD/MM/YYYY HH:mm:ss\");\n    chat.message = `${nickname} leave the room`;\n    chat.type = \"exit\";\n    const newMessage = firebase.database().ref(\"chats/\").push();\n    newMessage.set(chat);\n    firebase.database().ref(\"roomusers/\").orderByChild(\"roomname\").equalTo(roomname).once(\"value\", resp => {\n      let roomuser = [];\n      roomuser = snapshotToArray(resp);\n      const user = roomuser.find(x => x.nickname === nickname);\n\n      if (user !== undefined) {\n        const userRef = firebase.database().ref(\"roomusers/\" + user.key);\n        userRef.update({\n          status: \"offline\"\n        });\n      }\n    });\n    history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ScrollToBottom, {\n    className: \"ChatContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, chats.map((item, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    className: \"MessageBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, item.type === \"join\" || item.type === \"exit\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ChatStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ChatDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 27\n    }\n  }, item.date), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ChatContentCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 27\n    }\n  }, item.message)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ChatMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${item.nickname === nickname ? \"RightBubble\" : \"LeftBubble\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 27\n    }\n  }, item.nickname === nickname ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"MsgName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 31\n    }\n  }, \"Me\") : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"MsgName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 31\n    }\n  }, item.nickname), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"MsgDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, \" at \", item.date), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, item.message)))))), /*#__PURE__*/React.createElement(\"footer\", {\n    className: \"StickyFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"MessageForm\",\n    onSubmit: submitMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"message\",\n    id: \"message\",\n    placeholder: \"Enter message here\",\n    value: newchat.message,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, \"Send\")))))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"UsersCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"button\",\n    onClick: () => {\n      exitChat();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Exit Chat\")))), users.map((item, idx) => /*#__PURE__*/React.createElement(Card, {\n    key: idx,\n    className: \"UsersCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, item.nickname)))))))))));\n}\n\n_s(ChatRoom, \"Www1bRJxttXjl7dCE0hJnqgRovY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/home/proxin/React/react-js-chat-webapp-example/src/components/MainScreen/ChatRoom/ChatRoom.js"],"names":["React","useState","useEffect","useHistory","useParams","Typography","TextField","IconButton","CircularProgress","Container","Paper","Grid","Row","Col","Card","CardBody","CardSubtitle","Button","Form","InputGroup","Input","InputGroupAddon","Moment","firebase","ScrollToBottom","ChatRoom","chats","setChats","users","setUsers","nickname","setNickname","roomname","setRoomname","newchat","setNewchat","message","date","type","history","room","fetchData","localStorage","getItem","database","ref","orderByChild","equalTo","on","resp","snapshotToArray","resp2","roomusers","filter","x","status","snapshot","returnArr","forEach","childSnapshot","item","val","key","push","submitMessage","e","preventDefault","chat","Date","format","newMessage","set","onChange","persist","target","name","value","exitChat","once","roomuser","user","find","undefined","userRef","update","goBack","map","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport {\n  Typography,\n  TextField,\n  IconButton,\n  CircularProgress,\n  Container,\n  Paper,\n  Grid,\n} from \"@material-ui/core\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardSubtitle,\n  Button,\n  Form,\n  InputGroup,\n  Input,\n  InputGroupAddon,\n} from \"reactstrap\";\nimport Moment from \"moment\";\nimport firebase from \"../../../Firebase\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\n\nfunction ChatRoom() {\n  const [chats, setChats] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [nickname, setNickname] = useState(\"\");\n  const [roomname, setRoomname] = useState(\"\");\n  const [newchat, setNewchat] = useState({\n    roomname: \"\",\n    nickname: \"\",\n    message: \"\",\n    date: \"\",\n    type: \"\",\n  });\n  const history = useHistory();\n  const { room } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem(\"nickName\"));\n      setRoomname(room);\n      firebase\n        .database()\n        .ref(\"chats/\")\n        .orderByChild(\"roomname\")\n        .equalTo(roomname)\n        .on(\"value\", (resp) => {\n          setChats([]);\n          setChats(snapshotToArray(resp));\n        });\n    };\n\n    fetchData();\n  }, [room, roomname]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem(\"nickName\"));\n      setRoomname(room);\n      firebase\n        .database()\n        .ref(\"roomusers/\")\n        .orderByChild(\"roomname\")\n        .equalTo(roomname)\n        .on(\"value\", (resp2) => {\n          setUsers([]);\n          const roomusers = snapshotToArray(resp2);\n          setUsers(roomusers.filter((x) => x.status === \"online\"));\n        });\n    };\n\n    fetchData();\n  }, [room, roomname]);\n\n  const snapshotToArray = (snapshot) => {\n    const returnArr = [];\n\n    snapshot.forEach((childSnapshot) => {\n      const item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n    });\n\n    return returnArr;\n  };\n\n  const submitMessage = (e) => {\n    e.preventDefault();\n    const chat = newchat;\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format(\"DD/MM/YYYY HH:mm:ss\");\n    chat.type = \"message\";\n    const newMessage = firebase.database().ref(\"chats/\").push();\n    newMessage.set(chat);\n    setNewchat({ roomname: \"\", nickname: \"\", message: \"\", date: \"\", type: \"\" });\n  };\n\n  const onChange = (e) => {\n    e.persist();\n    setNewchat({ ...newchat, [e.target.name]: e.target.value });\n  };\n\n  const exitChat = (e) => {\n    const chat = {\n      roomname: \"\",\n      nickname: \"\",\n      message: \"\",\n      date: \"\",\n      type: \"\",\n    };\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format(\"DD/MM/YYYY HH:mm:ss\");\n    chat.message = `${nickname} leave the room`;\n    chat.type = \"exit\";\n    const newMessage = firebase.database().ref(\"chats/\").push();\n    newMessage.set(chat);\n\n    firebase\n      .database()\n      .ref(\"roomusers/\")\n      .orderByChild(\"roomname\")\n      .equalTo(roomname)\n      .once(\"value\", (resp) => {\n        let roomuser = [];\n        roomuser = snapshotToArray(resp);\n        const user = roomuser.find((x) => x.nickname === nickname);\n        if (user !== undefined) {\n          const userRef = firebase.database().ref(\"roomusers/\" + user.key);\n          userRef.update({ status: \"offline\" });\n        }\n      });\n\n    history.goBack();\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={6}>\n        <div className=\"Container\">\n          <Container >\n            <Row>\n              <Col xs=\"8\">\n                <ScrollToBottom className=\"ChatContent\">\n                  {chats.map((item, idx) => (\n                    <div key={idx} className=\"MessageBox\">\n                      {item.type === \"join\" || item.type === \"exit\" ? (\n                        <div className=\"ChatStatus\">\n                          <span className=\"ChatDate\">{item.date}</span>\n                          <span className=\"ChatContentCenter\">\n                            {item.message}\n                          </span>\n                        </div>\n                      ) : (\n                        <div className=\"ChatMessage\">\n                          <div\n                            className={`${\n                              item.nickname === nickname\n                                ? \"RightBubble\"\n                                : \"LeftBubble\"\n                            }`}\n                          >\n                            {item.nickname === nickname ? (\n                              <span className=\"MsgName\">Me</span>\n                            ) : (\n                              <span className=\"MsgName\">{item.nickname}</span>\n                            )}\n                            <span className=\"MsgDate\"> at {item.date}</span>\n                            <p>{item.message}</p>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </ScrollToBottom>\n                <footer className=\"StickyFooter\">\n                  <Form className=\"MessageForm\" onSubmit={submitMessage}>\n                    <InputGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"message\"\n                        id=\"message\"\n                        placeholder=\"Enter message here\"\n                        value={newchat.message}\n                        onChange={onChange}\n                      />\n                      <InputGroupAddon addonType=\"append\">\n                        <Button variant=\"primary\" type=\"submit\">\n                          Send\n                        </Button>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </Form>\n                </footer>\n              </Col>\n              <Col xs=\"4\">\n                <div>\n                  <Card className=\"UsersCard\">\n                    <CardBody>\n                      <CardSubtitle>\n                        <Button\n                          variant=\"primary\"\n                          type=\"button\"\n                          onClick={() => {\n                            exitChat();\n                          }}\n                        >\n                          Exit Chat\n                        </Button>\n                      </CardSubtitle>\n                    </CardBody>\n                  </Card>\n                  {users.map((item, idx) => (\n                    <Card key={idx} className=\"UsersCard\">\n                      <CardBody>\n                        <CardSubtitle>{item.nickname}</CardSubtitle>\n                      </CardBody>\n                    </Card>\n                  ))}\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ChatRoom;\n"]},"metadata":{},"sourceType":"module"}